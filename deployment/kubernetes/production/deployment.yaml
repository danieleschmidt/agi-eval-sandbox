apiVersion: apps/v1
kind: Deployment
metadata:
  name: agi-eval-sandbox-api
  namespace: agi-eval-sandbox
  labels:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: agi-eval-platform
    app.kubernetes.io/version: "1.0.0"
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: agi-eval-sandbox
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agi-eval-sandbox
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: agi-eval-platform
        app.kubernetes.io/version: "1.0.0"
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: agi-eval-sandbox
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: agi-eval-sandbox:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"
        - name: MAX_CONCURRENT_EVALUATIONS
          value: "10"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database-url
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: sentry-secret
              key: dsn
              optional: true
        - name: ENABLE_METRICS
          value: "true"
        - name: ENABLE_TRACING
          value: "true"
        - name: JAEGER_ENDPOINT
          value: "http://jaeger-collector:14268/api/traces"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - agi-eval-sandbox
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agi-eval-sandbox-worker
  namespace: agi-eval-sandbox
  labels:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: agi-eval-platform
    app.kubernetes.io/version: "1.0.0"
    environment: production
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: agi-eval-sandbox
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agi-eval-sandbox
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: agi-eval-platform
        app.kubernetes.io/version: "1.0.0"
        environment: production
    spec:
      serviceAccountName: agi-eval-sandbox
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: agi-eval-sandbox:1.0.0
        imagePullPolicy: Always
        command: ["celery"]
        args: ["-A", "agi_eval_sandbox.workers", "worker", "--loglevel=info", "--concurrency=4"]
        env:
        - name: ENV
          value: "production"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database-url
        - name: CELERY_BROKER_URL
          value: "redis://redis-service:6379"
        - name: CELERY_RESULT_BACKEND
          value: "redis://redis-service:6379"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: agi-eval-sandbox-service
  namespace: agi-eval-sandbox
  labels:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: agi-eval-platform
    app.kubernetes.io/version: "1.0.0"
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agi-eval-sandbox
  namespace: agi-eval-sandbox
  labels:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: serviceaccount
    app.kubernetes.io/part-of: agi-eval-platform
    app.kubernetes.io/version: "1.0.0"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agi-eval-sandbox-hpa
  namespace: agi-eval-sandbox
  labels:
    app.kubernetes.io/name: agi-eval-sandbox
    app.kubernetes.io/component: hpa
    app.kubernetes.io/part-of: agi-eval-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agi-eval-sandbox-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max