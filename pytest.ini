[tool:pytest]
# Pytest configuration for AGI Evaluation Sandbox

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --cov-branch
    --durations=10
    --maxfail=3
    -ra

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    e2e: End-to-end tests (slowest, full system)
    smoke: Smoke tests (critical functionality)
    slow: Slow tests (> 1 second)
    api: API endpoint tests
    database: Database interaction tests
    external: Tests requiring external services
    benchmark: Benchmark evaluation tests
    security: Security-related tests
    performance: Performance tests
    regression: Regression tests
    skip_ci: Skip in CI environment
    requires_gpu: Requires GPU for execution
    requires_model_api: Requires model provider API access

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::FutureWarning

# Asyncio settings
asyncio_mode = auto

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */site-packages/*
    */venv/*
    */.venv/*
    */migrations/*
    */scripts/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml